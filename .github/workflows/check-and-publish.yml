# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: build

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    branches:

  release:
    types: [created]

jobs:
#  quality:
#    name: Code QA
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - run: pip install black flake8 isort
#      - run: isort --version
#      - run: black --version
#      - run: flake8 --version
#      - run: black --check .
#      - run: isort --check .
#      - run: flake8 .

  checks:
    strategy:
      fail-fast: false
      matrix:
        # platform: ["ubuntu-latest"]
        # python-version: ["3.8"]
        platform: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.8", "3.9", "3.10"]

    
    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          
          python-version: ${{ matrix.python-version }}
          
      - name: Updating pip
        run: |
          $CONDA/bin/conda install pip
          $CONDA/bin/pip debug --verbose

      - name: Installing climetlab
        run: $CONDA/bin/pip install climetlab

      - name: Installing climetlab-eumetnet-postprocessing-benchmark
        run: |
          pwd
          ls
          ls *
          ls */*
          $CONDA/bin/pip install .
          $CONDA/bin/pip install s3fs  # disabled for the moment in climetlab setup

      - name: Install tests tools
        run: |
          $CONDA/bin/pip install pytest
          $CONDA/bin/pip freeze
          $CONDA/bin/pip install nbformat nbconvert ipykernel matplotlib # dependencies for test/test_notebooks.py
          $CONDA/bin/conda install cartopy # dependencies for test/test_notebooks.py

      - name: Run tests
        run: |
          cd tests
          $CONDA/bin/pytest

  checks-windows:
    strategy:
      fail-fast: false
      matrix:
        # platform: ["ubuntu-latest"]
        # python-version: ["3.8"]
        platform: ["windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]


    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}


    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:

          python-version: ${{ matrix.python-version }}

      - name: Updating pip
        run: |
          C:\Miniconda\condabin\conda.bat activate base
          C:\Miniconda\condabin\conda.bat install pip
          C:\Miniconda\condabin\conda.bat init powershell
          pip debug --verbose

      - name: Installing climetlab
        run: |
          C:\Miniconda\condabin\conda.bat activate base
          pip install climetlab

      - name: Installing climetlab-eumetnet-postprocessing-benchmark
        run: |
          pwd
          ls
          ls *
          ls */*
          C:\Miniconda\condabin\conda.bat activate base
          pip install .
          pip install s3fs  # disabled for the moment in climetlab setup

      - name: Install tests tools
        run: |
          C:\Miniconda\condabin\conda.bat activate base
          pip install pytest
          pip freeze
          C:\Miniconda\condabin\conda.bat install cartopy=0.21 nbformat nbconvert ipykernel -c conda-forge # dependencies for test/test_notebooks.py

      - name: Run tests
        run: |
          cd tests
          C:\Miniconda\condabin\conda.bat activate base
          pytest

  deploy:

    
    if: ${{ github.event_name == 'release' }}
    

    name: Upload to Pypi
    needs: [checks, checks-windows]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Check version
      run: |
        release=${GITHUB_REF##*/}
        echo release
        echo "$release"
        version=$(python setup.py --version)
        echo version
        echo "$version"
        test "$release" == "$version"

    - name: Build pip package
      run: |
        python setup.py sdist --verbose

    - name: Publish on the TEST test.pypi.org
      env:
      
        # see the uploaded pip package at https://test.pypi.org/search/?q=climetlab-{{ cookiecutter.plugin_name|lower|replace("_", "-") }}
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_API_TOKEN }}
      
      run: |
        twine upload --repository testpypi --verbose dist/*

# Uncomment to publish and make it available through pip
# (PYPI_API_TOKEN must be in the github secret for this space/repos)

    - name: Publish on pypi.org
      env:

        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      run: |
        twine upload dist/* --verbose
